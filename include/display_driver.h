#ifndef DISPLAY_DRIVER_H
#define DISPLAY_DRIVER_H

#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>
#include <avr/pgmspace.h>

#define PIN_DC PORTB0
#define PIN_RST PORTD7

#define DC_COMMAND PORTB &= ~(1 << PIN_DC)
#define DC_DATA PORTB |= (1 << PIN_DC)
#define CS_LOW PORTB &= ~(1 << PIN_SS)
#define CS_HIGH PORTB |= (1 << PIN_SS)
#define RST_LOW PORTB &= ~(1 << PIN_RST)
#define RST_HIGH PORTB |= (1 << PIN_RST)

#define ST7735_CASET 0x2A
#define ST7735_RASET 0x2B
#define ST7735_RAMWR 0x2C

//color definitions
#define BLACK 0x0000
#define BLUE 0xFF00
#define RED 0x00FF
#define GREEN 0x07E0
#define YELLOW 0x077F
#define ORANGE 0x049F
#define GREY 0x6b6b
#define GREY_DETAIL_DARK 0x2124
#define GREY_HIGHLIGHT 0xEF7D

#define ColStart 2
#define RowStart 3

#define SCREEN_WIDTH 127
#define SCREEN_HEIGHT 127

void ST7735_init();
void sendCommand(uint8_t cmd);
void sendData(uint8_t data);
char getHighByte16(uint16_t data);
char getLowByte16(uint16_t data);

void setMappingWindow(uint8_t xStart, uint8_t yStart, uint8_t xEnd, uint8_t yEnd);
void drawPixel(uint8_t x, uint8_t y, uint16_t color);
void drawRectangle(uint8_t xStart, uint8_t yStart, uint8_t xEnd, uint8_t yEnd, uint16_t color);
void drawRectangleWireframe(uint8_t xStart, uint8_t yStart, uint8_t xEnd, uint8_t yEnd, uint16_t color);
void clearBG(uint16_t color);



#define NUM_WIDTH 6
#define NUM_HEIGHT 6

// 6x6 bitmapping for numbers 0-9 (change to send color data instead)
const PROGMEM uint8_t bitmap[12][NUM_WIDTH] = {
    {0b011100, 0b100010, 0b100010, 0b100010, 0b100010, 0b011100}, // 0
    {0b001100, 0b011100, 0b001100, 0b001100, 0b001100, 0b011110}, // 1 
    {0b011100, 0b110010, 0b000010, 0b011100, 0b110000, 0b111110}, // 2
    {0b011100, 0b110010, 0b000100, 0b000110, 0b110010, 0b011100}, // 3
    {0b000100, 0b001100, 0b010100, 0b111110, 0b000100, 0b000100}, // 4
    {0b111110, 0b100000, 0b100000, 0b111100, 0b000010, 0b111100}, // 5
    {0b011110, 0b100000, 0b100000, 0b111100, 0b100010, 0b011100}, // 6
    {0b111110, 0b000010, 0b000100, 0b001000, 0b001000, 0b001000}, // 7
    {0b011100, 0b100010, 0b011100, 0b011100, 0b100010, 0b011100}, // 8
    {0b011100, 0b100010, 0b011110, 0b000010, 0b000010, 0b011100}, // 9
    {0b101101, 0b011110, 0b111111, 0b111111, 0b011110, 0b101101}, // Mine
    {0b001110, 0b011110, 0b111010, 0b000010, 0b000010, 0b001111}, // flag
};

#define FONT_WIDTH 6
#define FONT_HEIGHT 6

const PROGMEM uint8_t fontmap[27][FONT_WIDTH] = {
    {0b011110, 0b110011, 0b110011, 0b111111, 0b110011, 0b110011}, // A
    {0b111110, 0b110011, 0b111110, 0b110011, 0b110011, 0b111110}, // B
    {0b011110, 0b110011, 0b110000, 0b110000, 0b110011, 0b011110}, // C
    {0b111110, 0b110011, 0b110011, 0b110011, 0b110011, 0b111110}, // D
    {0b111111, 0b110000, 0b111110, 0b110000, 0b110000, 0b111111}, // E
    {0b111111, 0b110000, 0b110000, 0b111110, 0b110000, 0b110000}, // F
    {0b011110, 0b110011, 0b110000, 0b110111, 0b110011, 0b011111}, // G
    {0b110011, 0b110011, 0b111111, 0b110011, 0b110011, 0b110011}, // H
    {0b011110, 0b001100, 0b001100, 0b001100, 0b001100, 0b011110}, // I
    {0b000111, 0b000011, 0b000011, 0b000011, 0b110011, 0b011110}, // J
    {0b110011, 0b110110, 0b111100, 0b111100, 0b110110, 0b110011}, // K
    {0b110000, 0b110000, 0b110000, 0b110000, 0b110000, 0b111111}, // L
    {0b110001, 0b111011, 0b111111, 0b110101, 0b110001, 0b110001}, // M
    {0b110001, 0b111001, 0b111101, 0b110111, 0b110011, 0b110001}, // N
    {0b011110, 0b110011, 0b110011, 0b110011, 0b110011, 0b011110}, // O
    {0b111110, 0b110011, 0b110011, 0b111110, 0b110000, 0b110000}, // P
    {0b011110, 0b110011, 0b110011, 0b110111, 0b110010, 0b011101}, // Q
    {0b111110, 0b110011, 0b110011, 0b111110, 0b110011, 0b110011}, // R
    {0b011111, 0b110000, 0b011110, 0b000011, 0b110011, 0b011110}, // S
    {0b111111, 0b001100, 0b001100, 0b001100, 0b001100, 0b001100}, // T
    {0b110011, 0b110011, 0b110011, 0b110011, 0b110011, 0b011110}, // U
    {0b110011, 0b110011, 0b110011, 0b110011, 0b011110, 0b001100}, // V
    {0b110001, 0b110001, 0b110101, 0b111111, 0b111011, 0b110001}, // W
    {0b110011, 0b110011, 0b011110, 0b011110, 0b110011, 0b110011}, // X
    {0b110011, 0b110011, 0b110011, 0b011110, 0b001100, 0b001100}, // Y
    {0b111111, 0b000111, 0b001110, 0b011100, 0b111000, 0b111111}, // Z
    {0b001100, 0b001100, 0b001100, 0b001100, 0b000000, 0b001100}, // !
};

#define EMOJI_WIDTH 11
#define EMOJI_HEIGHT 11

const PROGMEM uint16_t emojimap[4][EMOJI_WIDTH] = {
    {0x0000, 0x0000, 0x0000, 0b00111111100, 0b01111111110, 0b10110001101, 0x0000, 0b00100000100, 0b00011111000, 0x0000, 0x0000}, // sunglasses
    {0x0000, 0x0000, 0x0000, 0b00101010100, 0b00010001000, 0b00101010100, 0x0000, 0b00001110000, 0b00010001000, 0x0000, 0x0000}, // dead
    {0x0000, 0x0000, 0x0000, 0b00110011000, 0b00110011000, 0x0000, 0x0000, 0b00100001000, 0b00011110000, 0x0000, 0x0000}, // smile
    {0b00011111000, 0b00111111100, 0b01111111110, 0b11111111111, 0b11111111111, 0b11111111111, 0b11111111111, 0b11111111111, 0b01111111110, 0b00111111100, 0b00011111000}, // base
};

#define CURSOR_WIDTH 16
#define CURSOR_HEIGHT 16

const PROGMEM uint16_t cursormap[CURSOR_HEIGHT][CURSOR_WIDTH] = {
  GREY, GREY, GREY, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, GREY, GREY, GREY, GREY, GREY, 
  GREY, GREY, GREY, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, GREY, GREY, GREY, GREY, GREY, 
  GREY, GREY, GREY, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, GREY, GREY, GREY, GREY, 
  GREY, GREY, 0x0000, 0xffff, 0x0000, 0xffff, 0x0000, 0xffff, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, GREY, GREY, GREY, 
  GREY, GREY, 0x0000, 0xffff, 0x0000, 0xffff, 0x0000, 0xffff, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, GREY, GREY, 
  GREY, 0x0000, 0xffff, 0xffff, 0x0000, 0xffff, 0x0000, 0xffff, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, GREY, GREY, 
  GREY, 0x0000, 0xffff, 0xffff, 0x0000, 0xffff, 0x0000, 0xffff, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, GREY, 
  GREY, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0xffff, 0xffff, 0xffff, 0x0000, 
  GREY, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, 
  GREY, 0x0000, 0xffff, 0x0000, 0xffff, 0x0000, 0xffff, 0xffff, 0x0000, 0xffff, 0xffff, 0x0000, GREY, 0x0000, 0x0000, GREY, 
  GREY, GREY, 0x0000, 0x0000, 0xffff, 0x0000, 0xffff, 0xffff, 0x0000, 0xffff, 0xffff, 0x0000, GREY, GREY, GREY, GREY, 
  GREY, GREY, GREY, GREY, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0000, GREY, GREY, GREY, GREY, 
  GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x0000, 0xffff, 0xffff, 0x0000, GREY, GREY, GREY, GREY, 
  GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x0000, 0xffff, 0xffff, 0x0000, GREY, GREY, GREY, GREY, 
  GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x0000, 0xffff, 0xffff, 0x0000, GREY, GREY, GREY, GREY, 
  GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x0000, 0x0000, GREY, GREY, GREY, GREY, GREY
};

#define BOMB_WIDTH 42
#define BOMB_HEIGHT 64

// this is different in that it sends color data
const PROGMEM uint16_t bomb[BOMB_HEIGHT][BOMB_WIDTH] = {

  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xeef6, 0xdfbf, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xef38, 0xa71f, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xf7fd, 0x6e5e, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xffb8, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xdfff, 0x3dbf, 0xce33, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xce97, 0xbe9b, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xaf3f, 0x35df, 0xdfde, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xaf1e, 0xcf7d, 0xe759, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x86bf, 0x35ff, 0xb75f, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x8ebf, 0xae58, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x5e1e, 0x361f, 0x869e, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x661d, 0x84f0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xf7b9, 0x35df, 0x2e7f, 0x35ff, 0xefdd, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xd79f, 0xc7bf, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x5985, 0x6a44, GREY, GREY, GREY, GREY, 0x9f1f, 0x2ddf, 0x1ebf, 0x2dff, 0x55fe, 0xced8, GREY, GREY, GREY, GREY, GREY, 0xaede, 0x4186, 0xe759, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, 0xe7df, 0xf71b, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x5165, 0xaaa9, 0x71e6, 0x7aa6, GREY, 0xf7fd, 0x3ddf, 0x35df, 0x171f, 0x16ff, 0x35df, 0x45de, 0x7e9f, 0xbf9f, 0xd7ff, 0xa73f, 0x5474, 0x69c6, 0xaaa9, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, 0xf7be, 0x35ff, 0x9eff, 0xcf1c, 0xe6f8, GREY, GREY, GREY, GREY, 0x4183, 0xaa89, 0xa248, 0x9207, 0x7186, 0x53f2, 0x33d3, 0x21c9, 0x3166, 0x4165, 0x3946, 0x2988, 0x2a4c, 0x3351, 0x5ddd, 0x220b, 0x8a07, 0xaaa9, 0x89e7, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, 0x7e9f, 0x35df, 0x35bf, 0x3ddf, 0x765e, 0xcfdf, 0xf73a, GREY, 0x4a04, 0xa248, 0xaaa9, 0xa289, 0x9a27, 0x9a48, 0x9aaa, 0xaaa9, 0xaaca, 0xaaea, 0xaaea, 0xaaca, 0xaaca, 0xaaca, 0x8a68, 0xa2aa, 0xa289, 0xa289, 0x81c6, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, 0x6e5f, 0x4e1f, 0x35df, 0x2ddf, 0x365f, 0x2dff, 0x3ddf, 0x4dde, 0x9a68, 0xa2c9, 0xaaea, 0xb32b, 0xaaca, 0xb32b, 0xb34b, 0xb38c, 0xbb8c, 0xbb8c, 0xb36c, 0xb36c, 0xbb4b, 0xab0a, 0xaaca, 0xb36c, 0xa247, 0x69c6, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, 0x9edf, 0x663f, 0x35bf, 0x2ddf, 0x2ebf, 0x2e1f, 0x35ff, 0x459c, 0x9a89, 0xa2c9, 0xaaea, 0xab2b, 0xb38c, 0xc40e, 0xcc91, 0xfefb, 0xdd74, 0xdd54, 0xd512, 0xccb1, 0xc450, 0xbbcd, 0xb36c, 0xab0a, 0xa2a9, 0x71a7, 0xe718, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, 0xef7b, 0x869d, 0x35de, 0x35df, 0x261e, 0x173f, 0x273f, 0x20e5, 0xaaa9, 0xab0b, 0xb36c, 0xbbcd, 0xd4d2, 0xe5b5, 0xddd6, 0xffff, 0xff5c, 0xe699, 0xe617, 0xe5f6, 0xddd6, 0xdd74, 0xc450, 0xb36c, 0xab0b, 0xaac9, 0xaf1e, 0xad70, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, 0xa5d6, 0x86bf, 0x35df, 0x2ddf, 0x26bf, 0x0209, 0x9a88, 0xb34b, 0xbbad, 0xc450, 0xdd53, 0xe5d6, 0xe638, 0xffff, 0xffff, 0xffff, 0xe658, 0xee38, 0xee37, 0xe617, 0xe5f6, 0xe5b5, 0xccb1, 0xb36c, 0xb30b, 0x20e5, 0x6c94, 0xaf1d, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, 0xd73c, 0x35df, 0x35ff, 0x4d3b, 0x79c7, 0xaaa9, 0xbbcd, 0xd4b1, 0xdd33, 0xddb5, 0xe5f6, 0xe617, 0xe658, 0xff5c, 0xff5c, 0xfed9, 0xf6b9, 0xf6fa, 0xff7c, 0xffbd, 0xe5d6, 0xdd95, 0xcc90, 0xb36c, 0x9289, 0x5b0e, 0x33b3, 0x4dde, 0xb77f, 0xefdc, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, 0x869f, 0x35df, 0x10c4, 0x9a88, 0xa2ea, 0xcc90, 0xd533, 0xdd74, 0xddb5, 0xe5f6, 0xee37, 0xf698, 0xeed9, 0xf73b, 0xff1a, 0xf6b9, 0xf6da, 0xff1b, 0xeeda, 0xe5d5, 0xddb5, 0xdd53, 0xbbcd, 0xaae9, 0x69c6, 0x39a8, 0x461f, 0x2ddf, 0x35df, 0x45de, 0x45be, 0x5e1e, 0xd77e, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, 0xf7fd, 0x4d9d, 0x69c5, 0xaa89, 0xb30b, 0xd512, 0xdd54, 0xdd94, 0xddb5, 0xedf6, 0xee37, 0xf698, 0xf6d9, 0xfefa, 0xfefa, 0xf6b9, 0xf698, 0xf678, 0xee37, 0xe5f6, 0xdd95, 0xdd54, 0xcc90, 0xaaca, 0x9aa9, 0x82ea, 0x2515, 0x1f3f, 0x173f, 0x26df, 0x3dfd, 0xefff, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x3aac, 0x9a69, 0xa2a9, 0xb34b, 0xd512, 0xdd53, 0xdd74, 0xdd95, 0xe5f6, 0xee37, 0xee78, 0xf699, 0xf6b9, 0xf6b9, 0xf698, 0xee78, 0xee58, 0xee17, 0xe5d6, 0xdd94, 0xdd54, 0xd4b1, 0xaaea, 0xaaca, 0x8a69, 0x0104, 0x173f, 0x25ff, 0x6e3e, 0xdeb7, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x2925, 0x9a68, 0xaac9, 0xb34c, 0xd512, 0xd533, 0xdd74, 0xdd94, 0xe5d5, 0xe616, 0xee57, 0xee78, 0xf698, 0xf678, 0xee78, 0xee57, 0xee37, 0xe5f6, 0xe5d5, 0xdd94, 0xdd53, 0xd4b1, 0xaaeb, 0xaaca, 0x9268, 0x28c3, 0x2d18, 0x561f, 0xa5d6, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x40c4, 0x9a68, 0xaac9, 0xb34c, 0xd512, 0xd533, 0xdd54, 0xdd74, 0xe5b5, 0xe5f6, 0xee37, 0xee57, 0xee57, 0xee57, 0xee57, 0xee37, 0xee16, 0xe5f6, 0xe5b5, 0xdd74, 0xdd33, 0xd4b1, 0xab0b, 0xaaca, 0x9a68, 0x5124, 0x4bd2, 0x6518, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, 0x8b23, 0x51a0, 0x5943, 0x9227, 0xa248, 0xa2c9, 0xbb6c, 0xd4f2, 0xd513, 0xdd33, 0xdd54, 0xe595, 0xe5d5, 0xedf6, 0xee16, 0xee17, 0xee37, 0xee16, 0xedf6, 0xedf6, 0xe5d5, 0xdd94, 0xdd54, 0xd533, 0xcc90, 0xb32b, 0xa2ca, 0x9a89, 0xa2a9, 0x9268, 0x38c1, 0x7242, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, 0x3920, 0x6185, 0x79a6, 0x91c7, 0x89a6, 0x91e7, 0x9267, 0xa2c9, 0xbb6c, 0xcc91, 0xd4f2, 0xd512, 0xdd33, 0xdd74, 0xdd94, 0xe5b5, 0xe5d5, 0xe5d5, 0xe5d5, 0xe5d5, 0xe5b5, 0xe5b5, 0xdd94, 0xdd73, 0xdd33, 0xd4f2, 0xc42f, 0xab2b, 0xaaca, 0xaaa9, 0xab2b, 0xaaca, 0xaaca, 0xaaca, 0x5145, 0x6a00, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, 0x2081, 0x2081, 0x4903, 0x6144, 0x7164, 0x7164, 0x81c6, 0xa2a9, 0xbb4c, 0xc42f, 0xcc90, 0xd4d1, 0xd4f2, 0xd533, 0xdd53, 0xdd74, 0xe574, 0xe574, 0xe574, 0xdd74, 0xdd74, 0xdd74, 0xdd53, 0xdd33, 0xd4f2, 0xccb0, 0xc3ee, 0xab0b, 0xa2c9, 0x9a88, 0x9227, 0x91c6, 0x91c6, 0x6144, 0x1862, 0x59c0, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, 0x7329, 0x2924, 0x2061, 0x6165, 0x9247, 0xa289, 0xb32b, 0xc3ee, 0xc42f, 0xcc70, 0xccb1, 0xd4d2, 0xd4f2, 0xd512, 0xdd12, 0xdd13, 0xdd13, 0xdd12, 0xdd12, 0xd512, 0xd4f2, 0xd4d2, 0xd4b1, 0xc40f, 0xc3ed, 0xa2ea, 0xa2a9, 0xa268, 0x9a49, 0x4902, 0x1861, 0x51e0, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, 0xf7fe, 0x0842, 0xa248, 0xa289, 0xb30a, 0xbbad, 0xc3ee, 0xc40f, 0xcc4f, 0xcc90, 0xd4b1, 0xd4b1, 0xd4d1, 0xd4d1, 0xd4d1, 0xd4d1, 0xd4d1, 0xd4b1, 0xd4b1, 0xcc90, 0xc42f, 0xc3ce, 0xbb8d, 0xaac8, 0xa2a8, 0x8a27, 0x1841, 0x2b31, 0xf7dc, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x52aa, 0x8a48, 0xa268, 0xaaca, 0xbb8c, 0xc3ad, 0xc3ce, 0xc40e, 0xc42f, 0xcc50, 0xcc70, 0xcc90, 0xcc90, 0xcc90, 0xcc90, 0xcc70, 0xcc70, 0xcc4f, 0xc40f, 0xbbee, 0xbbcd, 0xb34c, 0xee2d, 0xc3eb, 0x8a09, 0x0063, 0x35df, 0x3ddf, 0xd7bf, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xb639, 0x48e3, 0xa248, 0xa2a9, 0xbb6c, 0xbb8c, 0xbbad, 0xc3ce, 0xc40e, 0xcc2f, 0xcc4f, 0xcc4f, 0xcc50, 0xcc50, 0xcc4f, 0xcc4f, 0xc42f, 0xc42e, 0xc3ee, 0xc3cd, 0xbb8d, 0xb32b, 0xb388, 0x8a67, 0x69e8, 0x230f, 0x45de, 0x8eff, 0xd7df, 0xf779, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xb6fd, 0x2882, 0xa248, 0xa288, 0xb34b, 0xbb6c, 0xbb8d, 0xbbad, 0xc3ee, 0xc40e, 0xc42f, 0xcc2f, 0xcc2f, 0xcc2f, 0xcc2f, 0xc42f, 0xc40f, 0xc40e, 0xc3cd, 0xc3ad, 0xbb6c, 0xb34a, 0xa2c7, 0x71c5, 0x4987, 0x3c76, 0x6dda, 0x9df5, 0xd6b5, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x86be, 0x0022, 0x9a48, 0x9a68, 0xb32b, 0xb34b, 0xbb6c, 0xbb8c, 0xbbad, 0xc3ce, 0xc3ee, 0xc40e, 0xc40e, 0xc40e, 0xc40e, 0xc3ee, 0xc3ee, 0xc3ce, 0xbbad, 0xbb8d, 0xb34b, 0xb3ca, 0x9a68, 0x4924, 0x18e5, 0x65fe, 0xbdd3, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x45dd, 0x3cd8, 0x3061, 0xa248, 0xaaca, 0xb30a, 0xb32b, 0xbb4c, 0xbb6c, 0xbb8d, 0xbbad, 0xc3ad, 0xc3cd, 0xc3cd, 0xbbae, 0xbbad, 0xbbac, 0xbb8d, 0xb34c, 0xb389, 0xff6f, 0xc4ca, 0x5945, 0x320a, 0x1b30, 0x6e3e, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, 0xe7ff, 0x3ddf, 0x261f, 0x0104, 0x69a6, 0x9a68, 0xa289, 0xaaca, 0xb30a, 0xb32b, 0xbb4c, 0xbb6c, 0xbb6c, 0xbb6c, 0xbb6c, 0xbb6c, 0xbb6c, 0xbb4c, 0xb34b, 0xd52b, 0xff6c, 0xff4e, 0xa248, 0x0001, 0x1b72, 0x35df, 0x35df, 0xefbd, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, 0x767f, 0x35df, 0x1f1f, 0x275f, 0x0021, 0x9a08, 0x9a27, 0x9a48, 0xa288, 0xaaca, 0xb30a, 0xb30a, 0xbb2b, 0xbb2b, 0xb30b, 0xab2a, 0xb3aa, 0xbc4a, 0xff4e, 0xff8c, 0xfece, 0x8a47, 0x9247, 0x373e, 0x2e7e, 0x25fe, 0x35df, 0x6e5e, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, 0xd7be, 0x35bf, 0x1ebf, 0x0f7f, 0x0f5f, 0x2f5f, 0x8a27, 0x8a07, 0x9207, 0x9207, 0x9a48, 0xa268, 0xd4ec, 0xe60d, 0xf6ae, 0xff4e, 0xff6c, 0xff6c, 0xff6c, 0xff6e, 0xa386, 0x8a07, 0x99e7, 0x48e3, 0x175f, 0x1f1f, 0x26df, 0x2ddf, 0x35df, 0xcf9f, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, 0x9637, 0x5e3e, 0x263f, 0x1f3f, 0x265f, 0x35ff, 0x2dff, 0x91e6, 0x81a5, 0x7985, 0x71a5, 0x9206, 0x9227, 0xa347, 0xf64c, 0xfeaf, 0xee2d, 0xccca, 0xb3a7, 0x9265, 0x9226, 0x81a7, 0x7184, 0x89c5, 0x5964, 0x0f5f, 0x175f, 0x173f, 0x26bf, 0x2ddf, 0x35ff, 0xf79d, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, 0xcfbe, 0x76bf, 0x35ff, 0x265f, 0x35df, 0x2dff, 0x2ddf, 0x35df, 0x91c6, 0x7964, 0x7964, 0x89a6, 0x38a1, 0x5944, 0x8a68, 0x9a68, 0xa288, 0xa288, 0x9268, 0x8207, 0x69a5, 0x2041, 0x6164, 0x7965, 0x8165, 0x71c5, 0x1edf, 0x1edf, 0x26ff, 0x1f1f, 0x267f, 0x35df, 0x5e1e, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, 0xf798, 0x45bf, 0x3dbf, 0x35df, 0x35df, 0x2ddf, 0x2ddf, 0x2ddf, 0x35df, 0x8184, 0x79c5, 0x5944, 0x1000, 0x1aad, 0x0a6d, 0x0022, 0x0001, 0x0000, 0x0000, 0x0021, 0x0125, 0x026a, 0x3e9b, 0x00e4, 0x1821, 0x7984, 0x89e7, 0x265f, 0x2e7f, 0x2e7f, 0x269f, 0x2e3f, 0x35df, 0x45fe, 0xb638, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, 0x7e7f, 0x2dff, 0x3dfe, 0x561e, 0x8edf, 0xcfbf, 0xeffe, 0xe759, 0xe756, 0x5103, 0x1841, 0x1987, 0x5d79, 0x2ddf, 0x35df, 0x35df, 0x2ddf, 0x1f1f, 0x0f5f, 0x175f, 0x173f, 0x173f, 0x0f5f, 0x1e9f, 0x2350, 0x0000, 0x71a6, 0x0147, 0x869f, 0x96df, 0xa71f, 0x9eff, 0x7e9f, 0x661e, 0x45be, 0xd7bf, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, 0xfffd, 0xaf7f, 0xef7b, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x20c0, 0x8bc4, GREY, GREY, 0xcfbf, 0x3dde, 0x35df, 0x2ddf, 0x2ddf, 0x1f5f, 0x0f5f, 0x0f5f, 0x0f3f, 0x1f3f, 0x2dff, 0x2ddf, 0x557b, 0x0000, 0x1880, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xee97, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xef9b, 0x5dfe, 0x2dbf, 0x35df, 0x263f, 0x1f1f, 0x173f, 0x0f5f, 0x263f, 0x35bf, 0x4dde, 0xe77b, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xe6f7, 0x55fe, 0x35bf, 0x35df, 0x1eff, 0x173f, 0x0f5f, 0x35df, 0x35bf, 0xefde, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xf79a, 0x35df, 0x35df, 0x263f, 0x26bf, 0x271f, 0x2ddf, 0x96df, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xdfff, 0x35df, 0x2ddf, 0x2e5f, 0x26ff, 0x35df, 0xf7dd, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x5e5f, 0x35df, 0x2e3f, 0x26bf, 0x45df, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x8ebe, 0x3dff, 0x2e1f, 0x2e7f, 0x55de, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xf79b, 0x561e, 0x35ff, 0x361f, 0x7e7e, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0x9ebc, 0x6e9f, 0x2dff, 0xa75f, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xa6bc, 0x3ddf, 0xc79f, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, 0xbf5f, 0xf7fd, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 
  GREY_DETAIL_DARK, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY_HIGHLIGHT, 

};



#endif /* DISPLAY_DRIVER_H */